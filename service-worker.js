"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/prabhaics/index.html","ef41bf1aa4d62b520dab33789e24267d"],["/prabhaics/static/css/main.e87ca59b.css","de5b452ee5885c04ae5bff9a6712e8f0"],["/prabhaics/static/js/main.1ca228a8.js","0213c7cf8f66630505102a5788389835"],["/prabhaics/static/media/b1.ce1ca4c1.jpg","ce1ca4c1b76130b464341676c1be4c3f"],["/prabhaics/static/media/b2.0701fda9.jpg","0701fda97213d06195aaea3fc9d91a47"],["/prabhaics/static/media/b3.49a1feaa.jpg","49a1feaa54d5a7f7faa439701b314827"],["/prabhaics/static/media/b4.228756a9.jpg","228756a9d890f98e7233bc4a103874ad"],["/prabhaics/static/media/car1.b9cb4ce8.jpg","b9cb4ce876a0db4b1543f9d7722d59c8"],["/prabhaics/static/media/car2.384806e5.jpg","384806e5d6fb643dee04ef9983ea084d"],["/prabhaics/static/media/car3.4dc45221.jpg","4dc45221e5050548e2a716952972ceb9"],["/prabhaics/static/media/cc1.b2e2c1c0.jpg","b2e2c1c0ab54d01c0852c4f63d1eab1c"],["/prabhaics/static/media/cc2.4c8946b7.jpg","4c8946b7414c8e8a09babc84bf6aae25"],["/prabhaics/static/media/cc3.424879c9.jpg","424879c9c02abdde12c8d556837e60fe"],["/prabhaics/static/media/cc4.8b09d8d1.jpg","8b09d8d17aa6cb32904601ca82aaea2f"],["/prabhaics/static/media/cc5.fa3f5c0c.jpg","fa3f5c0ca1dcae8d74284431e965f357"],["/prabhaics/static/media/logo.fa5012cb.png","fa5012cbd100ab0f1b632e4384f2069d"],["/prabhaics/static/media/p1.3529aecc.png","3529aeccd7c7f3c117a1d05bc3e4c12e"],["/prabhaics/static/media/s1.2185cdc0.png","2185cdc029c20d36d388f80df1cb1858"],["/prabhaics/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/prabhaics/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/prabhaics/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/prabhaics/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var c=new URL(e);return"/"===c.pathname.slice(-1)&&(c.pathname+=a),c.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,c,t){var r=new URL(e);return t&&r.pathname.match(t)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(c)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var c=new URL(a).pathname;return e.some(function(e){return c.match(e)})},stripIgnoredUrlParameters=function(e,a){var c=new URL(e);return c.hash="",c.search=c.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),c.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],c=e[1],t=new URL(a,self.location),r=createCacheKey(t,hashParamName,c,/\.\w{8}\./);return[t.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(c){if(!a.has(c)){var t=new Request(c,{credentials:"same-origin"});return fetch(t).then(function(a){if(!a.ok)throw new Error("Request for "+c+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(c,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(c){return Promise.all(c.map(function(c){if(!a.has(c.url))return e.delete(c)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,c=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(c))||(c=addDirectoryIndex(c,"index.html"),a=urlsToCacheKeys.has(c));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(c=new URL("/prabhaics/index.html",self.location).toString(),a=urlsToCacheKeys.has(c)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(c)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});